# OnlyVips Canary Deployment için Nginx konfigürasyonu
# %10 canary trafiği sağlar

# Backend API için canary yapılandırma
upstream backend {
    server onlyvips-backend:8000 weight=9;
    server onlyvips-backend-canary:8000 weight=1;
}

# MiniApp için canary yapılandırma
upstream miniapp {
    server onlyvips-miniapp weight=9;
    server onlyvips-miniapp-canary weight=1;
}

# Showcu Panel için canary yapılandırma
upstream showcu-panel {
    server onlyvips-showcu-panel weight=9;
    server onlyvips-showcu-panel-canary weight=1;
}

# API sunucusu
server {
    listen 80;
    server_name api.onlyvips.xyz;
    
    location / {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Log dosyaları
    access_log /var/log/nginx/api_access.log;
    error_log /var/log/nginx/api_error.log;
}

# MiniApp web uygulaması
server {
    listen 80;
    server_name app.onlyvips.xyz;
    
    location / {
        proxy_pass http://miniapp;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Log dosyaları
    access_log /var/log/nginx/miniapp_access.log;
    error_log /var/log/nginx/miniapp_error.log;
}

# Showcu Panel web uygulaması
server {
    listen 80;
    server_name panel.onlyvips.xyz;
    
    location / {
        proxy_pass http://showcu-panel;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Log dosyaları
    access_log /var/log/nginx/panel_access.log;
    error_log /var/log/nginx/panel_error.log;
}

# HTTPS yönlendirmesi
server {
    listen 80 default_server;
    server_name _;
    
    location / {
        return 301 https://$host$request_uri;
    }
} 