#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Pin Check Task Plugin - Sabitleme Kontrol GÃ¶rev Eklentisi
Bu modÃ¼l kullanÄ±cÄ±larÄ±n gruplarda mesaj sabitlemesini dinleyen gÃ¶rev sÄ±nÄ±fÄ±nÄ± iÃ§erir
"""

import logging
from telethon import events
from telethon.tl.types import ChannelParticipantAdmin, ChannelParticipantCreator
from telethon.tl.functions.channels import GetParticipantRequest
from ..base_task import BaseTask

logger = logging.getLogger(__name__)

class PinCheckTask(BaseTask):
    """Mesaj sabitleme iÅŸlemlerini kontrol eden gÃ¶rev tipi"""
    
    def __init__(self, user_id, task_id, expiry_time, verification_engine, bot):
        """PinCheckTask yapÄ±cÄ±sÄ±"""
        super().__init__(user_id, task_id, expiry_time, verification_engine, bot)
        self.handler = None
    
    def start_listening(self):
        """Dinlemeye baÅŸla"""
        
        # Sabitleme olaylarÄ±nÄ± dinle
        @self.bot.on(events.ChatAction())
        async def check_pin(event):
            try:
                # Sabitleme olayÄ± mÄ± kontrol et
                if not (event.action_message and event.action_message.pinned):
                    return
                
                # Grup veya kanal mesajÄ± mÄ± kontrol et
                if not (event.is_group or event.is_channel):
                    return
                
                # MesajÄ± sabitleyen kiÅŸiyi bul
                chat = await event.get_chat()
                sender = await event.get_sender()
                sender_id = str(sender.id)
                
                # Bu gÃ¶revi yapan kullanÄ±cÄ± mÄ± kontrol et
                if sender_id != self.user_id:
                    return
                
                # Grup yÃ¶neticisi mi kontrol et
                try:
                    participant = await self.bot(GetParticipantRequest(chat.id, int(self.user_id)))
                    is_admin = isinstance(participant.participant, (ChannelParticipantAdmin, ChannelParticipantCreator))
                    
                    if not is_admin:
                        logger.warning(f"KullanÄ±cÄ± {self.user_id} yÃ¶netici deÄŸil, sabitleme gÃ¶revi doÄŸrulanamaz")
                        return
                except Exception as e:
                    logger.error(f"YÃ¶netici kontrolÃ¼nde hata: {e}")
                    return
                
                logger.info(f"Mesaj sabitleme tespit edildi, gÃ¶rev doÄŸrulanÄ±yor: {self.user_id}_{self.task_id}")
                
                # GÃ¶revi doÄŸrula
                task_key = f"{self.user_id}_{self.task_id}"
                success = await self.verification_engine.verify_task(task_key)
                
                if success:
                    # KullanÄ±cÄ±ya DM olarak bildirim gÃ¶nder
                    try:
                        from telethon import Button
                        bot_username = getattr(self.verification_engine, 'bot_username', "OnlyVipsBot")
                        miniapp_url = f"https://t.me/{bot_username}/app?startapp={self.user_id}"
                        
                        await self.bot.send_message(
                            self.user_id, 
                            "ğŸ“Œ Mesaj sabitleme gÃ¶reviniz baÅŸarÄ±yla tamamlandÄ±! Daha fazla gÃ¶rev iÃ§in MiniApp'i ziyaret edebilirsiniz.",
                            buttons=[Button.url("ğŸš€ OnlyVips MiniApp", miniapp_url)]
                        )
                    except Exception as e:
                        logger.error(f"KullanÄ±cÄ±ya bildirim gÃ¶nderilirken hata: {e}")
            except Exception as e:
                logger.error(f"Sabitleme kontrolÃ¼nde hata: {e}")
        
        # Olay iÅŸleyicisini kaydet
        self.handler = check_pin
        logger.debug(f"PinCheckTask dinleme baÅŸlatÄ±ldÄ±: {self.user_id}_{self.task_id}")
    
    def stop_listening(self):
        """Dinlemeyi durdur"""
        if self.handler:
            # Bot event handler'Ä±nÄ± kaldÄ±r
            self.bot.remove_event_handler(self.handler)
            self.handler = None
            logger.debug(f"PinCheckTask dinleme durduruldu: {self.user_id}_{self.task_id}") 